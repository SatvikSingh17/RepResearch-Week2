##---loading_data-------------------------------------------
library("data.table")
##---reading_data-------------------------------------------
activityDT <- data.table::fread(input = "data/activity.csv")
getwd()
setwd(F:/SCRIPTS/R)
setwd("F:/SCRIPTS/R")
data <- read.csv("activity.csv")
steps_per_day <- aggregate(steps ~ date, data, sum)
hist(steps_per_day[, "steps"], breaks = 12,
xlab = "Steps", main = "Histogram of Steps per Day")
r
mean(steps_per_day[, "steps"])
median(steps_per_day[, "steps"])
steps_avg_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_avg_interval[, "interval"], steps_avg_interval[, "steps"],
type = "l",
main = "average daily activity pattern",
xlab = "Interval",
ylab = "Steps")
steps_avg_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_avg_interval[, "interval"], steps_avg_interval[, "steps"],
type = "l",
main = "Average Daily Activity Pattern",
xlab = "Interval",
ylab = "Steps")
idx <- which.max(steps_avg_interval[, "steps"])
steps_avg_interval[idx, "interval"]
sum(is.na(data))
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data_sep <- aggregate(steps ~ (interval + day), data, mean, na.rm = T)
data_impute <- merge(data, data_sep, by = c("interval", "day"))
data_impute <- transform(data_impute,
steps.x = ifelse(is.na(steps.x),
steps.y, steps.x))
data_impute <- data.frame(data_impute[, 1 : 4])
names(data_impute) <- c("interval", "day", "steps", "date")
data_impute$steps <- round(data_impute$steps, digits = 0)
data_impute <- data_impute[order(data_impute$date,
data_impute$interval), ]
impute_steps_per_day <- aggregate(steps ~ date, data_impute,
sum, na.rm = T)
hist(impute_steps_per_day[, "steps"], breaks = 12,
xlab = "Steps", main = "Histogram of Steps per Day")
mean(impute_steps_per_day[, "steps"])
median(impute_steps_per_day[, "steps"])
data_impute$type <- ifelse(data_impute$day %in% c("Saturday", "Sunday"),
"Weekend", "Weekday")
data_impute_per_itvtype <- aggregate(steps ~ (interval + type),
data_impute, mean, na.rm = T)
library(ggplot2)
ggplot(data_impute_per_itvtype, aes(x = interval, y = steps)) +
geom_line(color="blue") +
facet_wrap(~type, nrow = 2, ncol = 1) +
labs(x = "Interval",y = "Steps")
